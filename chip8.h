#ifndef CHIP8_H
#define CHIP8_H

#include <stdint.h>
#include <stdbool.h>


#define MEM_SIZE 1024*4       /* 4Kb                */
#define FRAMEBUFF 64*32       /* 2048 pixels        */

typedef struct {
    uint8_t memory[MEM_SIZE];
    uint16_t stack[16];
} mem_t;

static const uint8_t font[80] = {
    0xF0,0x90,0x90,0x90,0xF0,       // 0
    0x20,0x60,0x20,0x20,0x70,       // 1
    0xF0,0x10,0xF0,0x80,0xF0,  // 2
    0xF0,0x10,0xF0,0x10,0xF0,  // 3
    0x90,0x90,0xF0,0x10,0x10,  // 4
    0xF0,0x80,0xF0,0x10,0xF0,  // 5
    0xF0,0x80,0xF0,0x90,0xF0,  // 6
    0xF0,0x10,0x20,0x40,0x40,  // 7
    0xF0,0x90,0xF0,0x90,0xF0,  // 8
    0xF0,0x90,0xF0,0x10,0xF0,  // 9
    0xF0,0x90,0xF0,0x90,0x90,  // A
    0xE0,0x90,0xE0,0x90,0xE0,  // B
    0xF0,0x80,0x80,0x80,0xF0,  // C
    0xE0,0x90,0x90,0x90,0xE0,  // D
    0xF0,0x80,0xF0,0x80,0xF0,  // E
    0xF0,0x80,0xF0,0x80,0x80   // F
};

typedef struct 
{
    uint16_t PC;              /* program counter    */
    mem_t memory;

    uint8_t  regs[16];        /* registers V0...VF  */
    uint16_t I;               /* 16bit register     */
    uint8_t SP;               /* stack pointer      */
    uint8_t DT;               /* delay timer        */
    uint8_t ST;               /* sound timer        */

    bool    FB[FRAMEBUFF];    /* framebuffer        */
    uint8_t keypad[16];       /* Keyboard           */
} chip8_t;


chip8_t* chip8_init(void);
void chip8_destroy(chip8_t *c);
void chip8_cycle(chip8_t *c);
void chip8_update(chip8_t *c);

#endif /* CHIP8_H */
